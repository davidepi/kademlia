cmake_minimum_required(VERSION 2.8 FATAL_ERROR)
set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_SOURCE_DIR}/cmake/")
project(kademlia C CXX)
if (CMAKE_VERSION VERSION_LESS "3.1")
    if(CMAKE_COMPILER_IS_GNUCXX)
        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++11")
        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wno-conversion-null")
    elseif(CMAKE_CXX_COMPILER_ID STREQUAL "Clang")
        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")
        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wno-deprecated-register")
    elseif(CMAKE_CXX_COMPILER_ID STREQUAL "Intel")
        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")
    endif ()
else ()
    set(CMAKE_CXX_STANDARD 11)
    set(CMAKE_CXX_STANDARD_REQUIRED ON)
endif ()
file(GLOB_RECURSE kademlia_sources src/*.cpp)
file(GLOB_RECURSE main_file main.cpp)
list(REMOVE_ITEM kademlia_sources ${main_file})
file(GLOB_RECURSE kademlia_headers src/*.hpp src/settings.h)
include_directories(src)
find_package(Threads REQUIRED)
find_package(cURL REQUIRED)
add_executable(kad ${main_file} ${kademlia_sources})
if(CURL_FOUND)
    include_directories(${CURL_INCLUDE_DIRS})
    target_link_libraries(kad ${CMAKE_THREAD_LIBS_INIT} ${CURL_LIBRARIES})
endif(CURL_FOUND)

find_package(gtest)
if(GTEST_FOUND)
    find_package(flex)
    if(FLEX_FOUND)
        include_directories(UnitTestsXCT)
        include_directories(tests)
        file(GLOB gtest_main tests/allTests.cxx)
        file(GLOB xct_tests UnitTestsXCT/*.mm)
        FLEX_TARGET(lexer_out UnitTestsXCT/XCTtoGTEST.l ${CMAKE_CURRENT_BINARY_DIR}/testconverter.c)
        set(lexer_output ${CMAKE_CURRENT_BINARY_DIR}/testconverter.c)
        set_source_files_properties(${CMAKE_CURRENT_BINARY_DIR}/testconverter.c GENERATED)
        add_executable(testconverter EXCLUDE_FROM_ALL ${lexer_output})
        foreach(filename ${xct_tests})
            get_filename_component(tmp ${filename} NAME_WE)
            add_custom_command(OUTPUT "${CMAKE_CURRENT_BINARY_DIR}/tests/${tmp}.cc"
                COMMAND mkdir -p "${CMAKE_CURRENT_BINARY_DIR}/tests/"
                COMMAND testconverter ${filename} > "${CMAKE_CURRENT_BINARY_DIR}/tests/${tmp}.cc"
                DEPENDS testconverter)
            set(converted_tests ${converted_tests} "${CMAKE_CURRENT_BINARY_DIR}/tests/${tmp}.cc")
        endforeach()
        include_directories(${GTEST_INCLUDE_DIRS})
        add_executable(runTests EXCLUDE_FROM_ALL ${gtest_main} ${converted_tests} ${kademlia_sources})
        target_link_libraries(runTests ${GTEST_BOTH_LIBRARIES} ${CMAKE_THREAD_LIBS_INIT})
    endif(FLEX_FOUND)
endif(GTEST_FOUND)
