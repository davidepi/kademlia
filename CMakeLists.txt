cmake_minimum_required(VERSION 3.1 FATAL_ERROR)
set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_SOURCE_DIR}/cmake/")
project(kademlia C CXX)
set(CMAKE_CXX_STANDARD 11)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
file(GLOB_RECURSE kademlia_sources src/*.cpp)
file(GLOB_RECURSE main_file main.cpp)
list(REMOVE_ITEM kademlia_sources ${main_file})
file(GLOB_RECURSE kademlia_headers src/*.hpp src/settings.h)
file(GLOB_RECURSE kademlia_tests_sources tests/*.cpp)
include_directories(src)
find_package(Threads REQUIRED)
find_package(CURL)
add_executable(kad ${main_file} ${kademlia_sources})
if(CURL_FOUND)
    include_directories(${CURL_INCLUDE_DIRS})
    set_property(SOURCE src/Messenger.cpp APPEND_STRING PROPERTY COMPILE_FLAGS " -DCURL_FOUND ")
    target_link_libraries(kad ${CMAKE_THREAD_LIBS_INIT} ${CURL_LIBRARIES})
else()
    target_link_libraries(kad ${CMAKE_THREAD_LIBS_INIT})
endif(CURL_FOUND)

find_package(GTest)
if(GTEST_FOUND)
    if(CMAKE_BUILD_TYPE STREQUAL "Coverage")
        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS_DEBUG} -fprofile-arcs -ftest-coverage")
    endif(CMAKE_BUILD_TYPE STREQUAL "Coverage")
    include_directories(${GTEST_INCLUDE_DIRS})
    add_executable(runTests EXCLUDE_FROM_ALL ${CMAKE_CURRENT_SOURCE_DIR}/tests/allTests.cxx ${kademlia_sources} ${kademlia_tests_sources})
    target_link_libraries(runTests ${GTEST_BOTH_LIBRARIES} ${CMAKE_THREAD_LIBS_INIT} ${CURL_LIBRARIES})
endif(GTEST_FOUND)
set(CMAKE_VERBOSE_MAKEFILE OFF)
